openapi: 3.0.1
info:
  title: 学长学姐帮帮忙
  description: 红岩学长学姐帮帮忙2019项目api文档
  contact:
    name: skywalker512
    email: 2018210022@stu.cqupt.edu.cn
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  version: 1.0.0
servers:
  - url: /
tags:
  - name: 问题
  - name: 用户
  - name: 搜索
  - name: 回答
  - name: 标签
  - name: 图片
paths:
  "/questions":
    post:
      tags:
        - 问题
      summary: 新生提出新问题
      requestBody:
        description: 问题的内容
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Question"
            example:
              content: string
              photoUrls:
                - string
              tags:
                - id: 0
        required: true
      responses:
        400:
          $ref: "#/components/responses/400InvalidRequset"
        201:
          $ref: "#/components/responses/201Created"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        422:
          $ref: "#/components/responses/422UnprocesableEntity"
      security:
        - redRockAuth:
            - "write:questions"
            - "read:questions"
    get:
      tags:
        - 问题
      summary: 返回所有问题
      parameters:
        - $ref: "#/components/parameters/SortBy"
        - $ref: "#/components/parameters/Order"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PrePage"
      responses:
        "200":
          description: 成功获取
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Question"
              example:
                - $ref: "#/components/examples/QuestionWithOutAnswer"
  "/questions/tag/{tagId}":
    get:
      tags:
        - 问题
      summary: 通过标签找问题
      operationId: findPetsByTags
      parameters:
        - $ref: "#/components/parameters/TagId"
        - $ref: "#/components/parameters/SortBy"
        - $ref: "#/components/parameters/Order"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PrePage"
      responses:
        "200":
          description: 成功获取
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Question"
              example:
                - $ref: "#/components/examples/QuestionWithOutAnswer"
        404:
          $ref: "#/components/responses/404NotFound"
        410:
          $ref: "#/components/responses/410Gone"
  "/questions/{questionId}":
    get:
      tags:
        - 问题
      summary: 通过 id 找问题
      description: 返回单个问题
      parameters:
        - $ref: "#/components/parameters/QuestionId"
        - $ref: "#/components/parameters/SortBy"
        - $ref: "#/components/parameters/Order"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PrePage"
      responses:
        "200":
          description: 请求成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Question"
        404:
          $ref: "#/components/responses/404NotFound"
        410:
          $ref: "#/components/responses/410Gone"
    patch:
      tags:
        - 问题
      summary: 更新问题（部分）
      parameters:
        - $ref: "#/components/parameters/QuestionId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Question"
            examples:
              "问题解决":
                value:
                  status: "已解决"
      responses:
        400:
          $ref: "#/components/responses/400InvalidRequset"
        201:
          $ref: "#/components/responses/201Created"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        422:
          $ref: "#/components/responses/422UnprocesableEntity"
      security:
        - redRockAuth:
            - "write:questions"
            - "read:questions"
    delete:
      tags:
        - 问题
      summary: 删除一个问题
      parameters:
        - $ref: "#/components/parameters/QuestionId"
      responses:
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        204:
          $ref: "#/components/responses/204NoContent"
      security:
        - redRockAuth:
            - "write:questions"
            - "read:questions"
  "/image":
    post:
      tags:
        - 图片
      summary: 上传一/多个图片
      requestBody:
        description: base64 编码图片
        content:
          application/json:
            schema:
              type: array
              items:
                properties:
                  base64:
                    type: string
        required: true
      responses:
        "201":
          description: 创建成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
  "/image/delete":
    post:
      tags:
        - 图片
      summary: 删除一/多个图片
      requestBody:
        description: 图片 id
        content:
          application/json:
            schema:
              type: array
              items:
                properties:
                  id:
                    type: integer
        required: true
      responses:
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        204:
          $ref: "#/components/responses/204NoContent"
  "/questions/{questionId}/answer":
    post:
      tags:
        - 回答
      summary: 发表一个回答
      parameters:
        - $ref: "#/components/parameters/QuestionId"
      requestBody:
        description: 回答的内容
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Answer"
            example:
              content: string
              photoUrls:
                - string
      responses:
        400:
          $ref: "#/components/responses/400InvalidRequset"
        201:
          $ref: "#/components/responses/201Created"
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        422:
          $ref: "#/components/responses/422UnprocesableEntity"
      security:
        - redRockAuth:
            - "read:answers"
            - "write:answers"
  "/answers/{answerId}":
    delete:
      tags:
        - 回答
      summary: 删除一个回答
      parameters:
        - $ref: "#/components/parameters/answerId"
      responses:
        401:
          $ref: "#/components/responses/401Unauthorized"
        403:
          $ref: "#/components/responses/403Forbidden"
        204:
          $ref: "#/components/responses/204NoContent"
      security:
        - redRockAuth:
            - "write:answers"
            - "read:answers"
  "/answers/{answerId}/approval":
    post:
      tags:
        - 回答
      summary: 赞同/取消赞同一个回答
      parameters:
        - $ref: "#/components/parameters/answerId"
      responses:
        "200":
          description: 成功信息
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
  "/answers/{answerId}/oppose":
    post:
      tags:
        - 回答
      summary: 反对/取消反对一个回答
      parameters:
        - $ref: "#/components/parameters/answerId"
      responses:
        "200":
          description: 成功信息
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
  "/search/questions":
    get:
      tags:
        - 搜索
      summary: 搜索问题
      parameters:
        - $ref: "#/components/parameters/Search"
        - $ref: "#/components/parameters/SortBy"
        - $ref: "#/components/parameters/Order"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PrePage"
      responses:
        "200":
          description: 成功获取
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Question"
                example:
                  - $ref: "#/components/examples/QuestionWithOutAnswer"
  "/search/hot":
    get:
      tags:
        - 搜索
      summary: 最热搜索节点信息
      parameters:
        - $ref: "#/components/parameters/Limit"
      responses:
        "200":
          description: 成功获取
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tag"
  "/tags/hot":
    get:
      tags:
        - 标签
      summary: 返回热门标签
      parameters: 
        - $ref: '#/components/parameters/Limit'
      responses:
        "200":
          description: 获取成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
  "/user":
    get:
      tags:
        - 用户
      summary: 获取当前用户信息
      responses:
        "200":
          description: 成功获取
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              examples:
                "新生":
                  value:
                    id: 0
                    stuNum: 0
                    name: string
                    gender: 男
                    avatar: string
                    role: 新生
                    createdAt: '2019-07-21T06:33:23.243Z'
                    updatedAt: '2019-07-21T06:33:23.243Z'
                    questionsNum: 0
                    answersNum: 0
                "志愿者":
                   value:
                    id: 0
                    stuNum: 0
                    name: string
                    gender: 男
                    avatar: string
                    role: 志愿者
                    createdAt: '2019-07-21T06:33:23.243Z'
                    updatedAt: '2019-07-21T06:33:23.243Z'
                    approvalNum: 0
                    opposeNum: 0
                    questionsNum: 0
  "/user/questions":
    get:
      tags: 
        - 用户
      summary: 获取当前用户的问题
      parameters:
        - $ref: "#/components/parameters/SortBy"
        - $ref: "#/components/parameters/Order"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PrePage"
      responses:
        "200":
          description: 成功获取
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Question"
              example:
                - $ref: "#/components/examples/QuestionWithOutAnswer"
      security:
        - redRockAuth:
            - "read:questions"
  "/user/answers":
    get:
      tags: 
        - 用户
      summary: 获取当前用户的回答
      parameters:
        - $ref: "#/components/parameters/Status"
        - $ref: "#/components/parameters/SortBy"
        - $ref: "#/components/parameters/Order"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PrePage"
      responses:
        "200":
          description: 成功获取 （这里需要返回回答的所在的问题）
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer'
                example: 
                  id: 0
                  content: string
                  photoUrls:
                    - string
                  author:
                    id: 0
                    stuNum: 0
                    gender: 男
                    avatar: string
                    role: 新生
                    createdAt: '2019-07-21T06:11:52.733Z'
                    updatedAt: '2019-07-21T06:11:52.733Z'
                  approvalNum: 0
                  opposeNum: 0
                  question:
                    id: 0
                    content: string
                  createdAt: '2019-07-21T06:11:52.733Z'
                  updatedAt: '2019-07-21T06:11:52.733Z'
      security:
        - redRockAuth:
            - "read:answer"
components:
  schemas:
    Answer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        content:
          description: 回答内容
          type: string
        photoUrls:
          type: array
          items:
            type: string
            description: 图片链接
        author:
          $ref: "#/components/schemas/User"
        approvalNum:
          type: integer
        opposeNum:
          type: integer
        isApproval:
          type: boolean
          description: 当前登录用户是否赞同
        isOppose:
          type: boolean
          description: 当前登录用户是否反对
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    User:
      type: object
      properties:
        id:
          type: integer
          description: 就先用 int 自增吧，因为目前项目比较简单，如果可以也可以用 UUID(GUID)
          format: int64
        stuNum:
          type: integer
          description: 学号（好像 signed int32 是到 2147483647 应该用 int64吧？）
          format: int64
        name:
          type: string
          description: 从微信接口拿到用户名
        gender:
          type: string
          description: 性别
          enum:
            - 男
            - 女
        avatar:
          type: string
          description: 头像 (看2018的api是从微信那边拿来的)
        role:
          type: string
          description: 用户角色
          enum:
            - 新生
            - 志愿者
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Tag:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Question:
      type: object
      required:
        - content
        - photoUrls
        - tags
      properties:
        id:
          type: integer
          format: int64
        content:
          description: 问题内容 (从原型图中只有问题内容，没有 title)
          type: string
        photoUrls:
          type: array
          items:
            type: string
            description: 图片链接
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tag"
        answer:
          type: array
          items:
            $ref: "#/components/schemas/Answer"
        author:
          $ref: "#/components/schemas/User"
        answersCount:
          type: integer
        status:
          type: string
          description: 是否解决
          enum:
            - 已解决
            - 未解决
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    Image:
      type: object
      properties:
        id:
          type: integer
        url:
          type: string
  parameters:
    SortBy:
      name: sortby
      in: query
      required: false
      description: 按照什么排序 (默认 hot)
      schema:
        type: string
        enum:
          - hot
          - new
    Order:
      name: order
      in: query
      required: false
      description: 升降 (默认 asc)
      schema:
        type: string
        enum:
          - desc
          - asc
    Search:
      name: q
      in: query
      required: true
      description: 搜索内容 应该要使用 encodeURIComponent 转码
      schema:
        type: string
    Page:
      name: page
      in: query
      required: false
      schema:
        type: integer
    PrePage:
      name: prePage
      in: query
      required: false
      schema:
        type: integer
    QuestionId:
      name: questionId
      in: path
      required: true
      schema:
        type: integer
        format: int64
    answerId:
      name: answerId
      in: path
      required: true
      schema:
        type: integer
        format: int64
    TagId:
      name: tagId
      in: path
      description: Tags 的 id
      required: true
      schema:
        type: integer
        format: int64
    Limit:
      name: limit
      in: query
      required: false
      description: 限制返回数量 默认 10
      schema:
        type: integer
    Status:
      name: status
      in: query
      required: false
      description: 反对或者赞同 (默认不写返回全部)
      schema:
        type: string
        enum:
          - approval
          - oppose
  responses:
    404NotFound:
      description: Not Found
    400InvalidRequset:
      description: Invalid Requset
    401Unauthorized:
      description: Unauthorized
    403Forbidden:
      description: Forbidden
    410Gone:
      description: Gone
    422UnprocesableEntity:
      description: Unprocesable entity
    204NoContent:
      description: No Content
    201Created:
      description: Created (要返回对应的内容)
  examples:
    QuestionWithOutAnswer:
      value:
        id: 0
        content: string
        photoUrls:
          - string
        tags:
          - id: 0
            name: string
            createdAt: "2019-07-21T02:05:28.742Z"
            updatedAt: "2019-07-21T02:05:28.742Z"
        author:
          id: 0
          stuNum: 0
          name: string
          gender: 男
          avatar: string
          role: 新生
          createdAt: "2019-07-21T02:05:28.742Z"
          updatedAt: "2019-07-21T02:05:28.742Z"
          answersCount: 0
          status: "已解决"
        createdAt: "2019-07-21T02:05:28.742Z"
        updatedAt: "2019-07-21T02:05:28.742Z"
  securitySchemes:
    redRockAuth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: "http://XXXX.com"
          scopes:
            "write:questions": 修改你的问题
            "read:questions": 读取你的问题
            "read:answers": 读取你的回答
            "write:answers": 修改你的回答